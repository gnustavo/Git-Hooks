# PODNAME: README
# ABSTRACT: All you need to know to start using Git::Hooks

=pod

=encoding utf8

=head1 The Git::Hooks module

L<Git hooks|http://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks> are
programs you install in Git repositories in order to augment Git's
functionality.

The Git::Hooks module is a framework to make it easier to implement Git
hooks.

=head2 Documentation

To read about L<Git::Hooks>, look at the embedded documentation in the
module itself. Inside the distribution, you can format it with
L<perldoc|http://perldoc.perl.org/perldoc.html>:

    $ perldoc lib/Git/Hooks.pm

If you have already installed the module, you can specify the module name
instead of the file location:

    $ perldoc Git::Hooks

You can read the documentation and inspect the meta data on one of the CPAN
web interfaces, such as L<CPAN Search|http://search.cpan.org/dist/Git-Hooks>
or L<MetaCPAN|https://metacpan.org/release/Git-Hooks>:

=over 4

=item *	L<http://search.cpan.org/dist/Git-Hooks>

=item *	L<https://metacpan.org/release/Git-Hooks>

=back

The standard module documentation has example uses in the SYNOPSIS section,
but you can also look in the I<examples/> directory (if it's there), or look
at the test files in I<t/>.

There is a tutorial to guide you in the most common usages.

    $ perldoc Git::Hooks::TUTORIAL

=head2 Installation

You can install this module with a CPAN client, which will resolve
and install the dependencies:

	$ cpan Git::Hooks
	$ cpanm Git::Hooks

Git::Hooks is packaged with L<Dist::Zilla>, so that you can't install it
directly from the repository. However, it's possible to use it directly from
the Git repository, like so:

    #!/usr/bin/env perl
    use lib '/path/to/git/Git-Hooks/lib';
    use Git::Hooks;
    run_hooks($0, @ARGV);

=head2 Source location

The meta data, such as the source repository and bug tracker, is in
I<Makefile.PL> or the I<META.*> files it creates. You can find that on
those CPAN web interfaces, but you can also look at files directly in
the source repository:

=over 4

=item *	L<https://github.com/gnustavo/Git-Hooks>

=back

If you find a problem, file a ticket in the L<issue
tracker|https://github.com/gnustavo/Git-Hooks/issues>:

=over 4

=item *	L<https://github.com/gnustavo/Git-Hooks/issues>

=back

=head2 Getting help

Although I'm happy to hear from module users in private email, that's the
best way for me to forget to do something.

Besides the issue trackers, you can find help at
L<Perlmonks|http://www.perlmonks.org> or
L<Stackoverflow|http://www.stackoverflow.com>, both of which have many
competent Perlers who can answer your question, almost in real time.  They
might not know the particulars of this module, but they can help you
diagnose your problem.

You might like to read L<brian's Guide to Solving Any Perl
Problem|http://archive.oreilly.com/pub/a/perl/excerpts/9780596527242/brians-guide.html>.

=head2 Copyright and License

You should have received a I<LICENSE> file, but the license is also noted in
the module files. About the only thing you can't do is pretend that you
wrote code that you didn't.

=head2 Good luck!

Enjoy,

Gustavo Chaves, gnustavo@cpan.org

=cut
