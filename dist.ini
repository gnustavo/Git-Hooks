; See this to understand: http://dzil.org/tutorial/convert-dist.html

name    = Git-Hooks
author  = Gustavo L. de M. Chaves <gnustavo@cpan.org>
license = Perl_5
copyright_holder = CPQD <www.cpqd.com.br>

[GatherDir]
exclude_match = ~$

[@Filter]
-bundle = @Basic
-remove = MakeMaker
-remove = GatherDir
-remove = Readme

[MakeMaker::Awesome]
delimiter = |
header = | # see http://wiki.cpantesters.org/wiki/CPANAuthorNotes
header = | if ($^O eq 'MSWin32') {
header = |     warn "I do not support Windows yet. Sorry.\n";
header = |     exit 0;
header = | }
header = | 
header = | sub git {
header = |     my ($args) = @_;
header = |     my $output = `git $args`;
header = |     if ($? == -1) {
header = |         warn "Failed to execute 'git $args': $!\n";
header = |         exit 0;
header = |     } elsif ($? != 0) {
header = |         warn "Command 'git $args' died with exit code=$?\n";
header = |         exit 0;
header = |     }
header = |     return $output;
header = | }
header = | 
header = | # Check if we have a proper git
header = | chomp(my $git_version = git('version'));
header = | if (my ($major, $minor, $patch) = ($git_version =~ /(\d+)\.(\d+)\.(\d+)/)) {
header = |     if ($major < 1 || $major == 1 && ($minor < 8 || $minor == 8 && $patch < 3)) {
header = | 	warn "Don't support gits older than 1.8.3. Your version is $git_version.\n";
header = | 	exit 0;
header = |     }
header = | } else {
header = |     warn "Couldn't parse git version: '$git_version'\n";
header = |     exit 0;
header = | }

[NextRelease]

[MetaProvides::Package]

[AutoPrereqs]
skip = Email::Valid
skip = Gerrit::REST
skip = HTML::Entities
skip = JIRA::REST
skip = Text::SpellChecker

[Prereqs / TestRequires]
Config = 0
Test::Requires::Git = 0

[Prereqs / Recommends]
; Required in order to use Gerrit hooks
Gerrit::REST = 0
; Required by Git::Hooks::CheckCommit's 'email-valid' option
Email::Valid = 0
; Required by Git::Hooks::CheckJira
JIRA::REST = 0
; Required by Git::Hooks::CheckLog's 'spelling' option
Text::SpellChecker = 0
; Required by Git::Hooks::Notify to send email in HTML
HTML::Entities = 0

[PodWeaver]

[PkgVersion]
[MetaJSON]

[PodSyntaxTests]
[PodCoverageTests]
[Test::Kwalitee]
skiptest = use_strict ; Don't test for strictness since we use v5.16.0

[@Git]
[Git::NextVersion]

[@Filter]
-bundle = @GitHub
-remove = GitHub::Meta

[ExecDir]
dir = scripts

[MetaResources]
homepage = https://github.com/gnustavo/Git-Hooks/blob/next/README.pod
bugtracker = https://github.com/gnustavo/Git-Hooks/issues
repository = https://github.com/gnustavo/Git-Hooks.git

[Keywords]
keywords = git gerrit jira

[Meta::Contributors]
contributor = Mikko Koivunalho <mikkoi@cpan.org>
contributor = Dave Rolsky <autarch@urth.org>
contributor = Szymon Niezna≈Ñski <s.nez@member.fsf.org>

[Test::MinimumVersion]
max_target_perl = 5.16

[Test::NoTabs]

[Test::Perl::Critic]

[Test::Portability]

[Test::UnusedVars]

[Test::ReportPrereqs]

[Test::PodSpelling]
spell_cmd = hunspell -l -d en_US
stopword = acked
stopword = acl
stopword = acls
stopword = applypatch
stopword = aren
stopword = atlassian
stopword = bitbucket
stopword = canonicalization
stopword = CentOS
stopword = CFG
stopword = Chaves
stopword = checkcommit
stopword = checkfile
stopword = checkjira
stopword = checklog
stopword = checkreference
stopword = checkwhitespace
stopword = CMD
stopword = codespec
stopword = commentSizeLimit
stopword = COMMITID
stopword = cowsay
stopword = CPQD
stopword = doesn
stopword = Dockerfile
stopword = FIGlet
stopword = FILTERs
stopword = fixversion
stopword = fqdn
stopword = gerrit
stopword = githooks
stopword = Gitiles
stopword = gitlab
stopword = groupname
stopword = groupspec
stopword = html
stopword = isn
stopword = JGit
stopword = jira
stopword = jirapass
stopword = jiraurl
stopword = jirauser
stopword = Joyjit
stopword = jql
stopword = Kawaguchi
stopword = Kohsuke
stopword = lang
stopword = macOS
stopword = mailmap
stopword = matchkey
stopword = matchlog
stopword = MediaWiki
stopword = msg
stopword = mxcheck
stopword = Nath
stopword = natively
stopword = NEWCOMMIT
stopword = nocheck
stopword = noref
stopword = OLDCOMMIT
stopword = OpenStack
stopword = patchset
stopword = patchsets
stopword = pathspec
stopword = pathspecs
stopword = PATHSPEC
stopword = PATHSPECS
stopword = PATTERNs
stopword = prev
stopword = rebase
stopword = rebased
stopword = rebases
stopword = rebasing
stopword = REFSPECs
stopword = refspec
stopword = refspecs
stopword = reimplementation
stopword = RemoteIssue
stopword = RHEL
stopword = RULEs
stopword = scalable
stopword = section2
stopword = SHA1
stopword = shouldn
stopword = sizelimit
stopword = SPECs
stopword = src
stopword = StackOverflow
stopword = tldcheck
stopword = TODO
stopword = Torvalds
stopword = userenv
stopword = USERSPEC
stopword = v2
stopword = v3
stopword = ve
stopword = Wikimedia
